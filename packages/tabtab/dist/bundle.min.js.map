{"version":3,"file":"bundle.min.js","sources":["../src/Tabs.tsx","../src/IconSvg.tsx","../src/SortMethod.tsx","../src/TabModal.tsx","../src/TabList.tsx","../src/utils/isType.ts","../src/CloseButton.tsx","../src/Tab.tsx","../src/DragTabList.tsx","../src/DragTab.tsx","../src/PanelList.tsx","../src/Panel.tsx","../src/AsyncPanel.tsx","../src/ExtraButton.tsx","../src/index.ts"],"sourcesContent":["import React from \"react\"\n\ntype TabsProps = {\n  defaultIndex?: number\n  activeIndex?: number | null\n  showModalButton?: number | boolean\n  showArrowButton?: \"auto\" | boolean\n  ExtraButton?: React.ReactNode\n  onTabChange?: (event: any) => void\n  onTabSequenceChange?: (event: any) => void\n  onTabEdit?: (event: any) => void\n  customStyle?: {\n    TabList?: () => void\n    Tab?: () => void\n    Panel?: () => void\n    ActionButton?: () => void\n  }\n  children: React.ReactElement\n}\n\ntype State = {\n  activeIndex: number\n}\n\nexport default class Tabs extends React.Component<TabsProps, State> {\n  constructor(props: TabsProps) {\n    super(props)\n    this.handleTabChange = this.handleTabChange.bind(this)\n    this.handleTabSequence = this.handleTabSequence.bind(this)\n    this.handleEdit = this.handleEdit.bind(this)\n    this.state = {\n      activeIndex: this.getActiveIndex(props)\n    }\n  }\n\n  static defaultProps: Partial<TabsProps> = {\n    showModalButton: 4,\n    showArrowButton: \"auto\",\n    onTabChange: () => {},\n    onTabSequenceChange: () => {},\n    customStyle: {\n      TabList: null,\n      Tab: null,\n      Panel: null,\n      ActionButton: null\n    }\n  }\n\n  getActiveIndex(props: TabsProps) {\n    const { defaultIndex, activeIndex } = props\n    if (activeIndex) return activeIndex\n    if (defaultIndex) return defaultIndex\n    return 0\n  }\n\n  componentWillReceiveProps(nextProps: TabsProps) {\n    if (nextProps.activeIndex !== this.props.activeIndex) {\n      this.setState({ activeIndex: this.getActiveIndex(nextProps) })\n    }\n  }\n\n  handleTabChange(index: number) {\n    const { activeIndex, onTabChange } = this.props\n    if (activeIndex !== 0 && !activeIndex) {\n      this.setState({ activeIndex: index })\n    }\n    if (onTabChange) {\n      onTabChange(index)\n    }\n  }\n\n  handleTabSequence({\n    oldIndex,\n    newIndex\n  }: {\n    oldIndex: number\n    newIndex: number\n  }) {\n    const { onTabSequenceChange } = this.props\n    if (onTabSequenceChange) {\n      onTabSequenceChange({ oldIndex, newIndex })\n    }\n  }\n\n  handleEdit({ type, index }: { type: string; index: number }) {\n    const { onTabEdit } = this.props\n    if (onTabEdit) {\n      onTabEdit({ type, index })\n    }\n  }\n\n  render() {\n    const { children, ...extraProps } = this.props\n    const { activeIndex } = this.state\n    const props = {\n      handleTabChange: this.handleTabChange,\n      handleTabSequence: this.handleTabSequence,\n      handleEdit: this.handleEdit,\n      activeIndex,\n      ...extraProps\n    }\n\n    return (\n      <div>\n        {React.Children.map(children, (child) => {\n          return React.cloneElement(child, props)\n        })}\n      </div>\n    )\n  }\n}\n","import React from \"react\"\n// The svg path is from react-icons: https://github.com/gorangajic/react-icons/\nconst Svg = ({ d }: { d: string }) => (\n  <svg\n    viewBox=\"0 0 40 40\"\n    fill=\"currentColor\"\n    height=\"1em\"\n    width=\"1em\"\n    style={{ verticalAlign: \"middle\" }}\n  >\n    <g>\n      <path d={d} />\n    </g>\n  </svg>\n)\n\nconst CloseIcon = () => (\n  <Svg d=\"m31.6 10.7l-9.3 9.3 9.3 9.3-2.3 2.3-9.3-9.3-9.3 9.3-2.3-2.3 9.3-9.3-9.3-9.3 2.3-2.3 9.3 9.3 9.3-9.3z\" />\n)\n\nconst LeftIcon = () => (\n  <Svg d=\"m25.7 12.3l-7.7 7.7 7.7 7.7-2.3 2.3-10-10 10-10z\" />\n)\n\nconst RightIcon = () => (\n  <Svg d=\"m16.6 10l10 10-10 10-2.3-2.3 7.7-7.7-7.7-7.7z\" />\n)\n\nconst BulletIcon = () => (\n  <Svg d=\"m31.7 28.3h-23.4c-1.8 0-3.3 1.5-3.3 3.4s1.5 3.3 3.3 3.3h23.4c1.8 0 3.3-1.5 3.3-3.3s-1.5-3.4-3.3-3.4z m0-11.6h-23.4c-1.8 0-3.3 1.5-3.3 3.3s1.5 3.3 3.3 3.3h23.4c1.8 0 3.3-1.5 3.3-3.3s-1.5-3.3-3.3-3.3z m0-11.7h-23.4c-1.8 0-3.3 1.5-3.3 3.3s1.5 3.4 3.3 3.4h23.4c1.8 0 3.3-1.5 3.3-3.4s-1.5-3.3-3.3-3.3z\" />\n)\n\nexport { CloseIcon, LeftIcon, RightIcon, BulletIcon }\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  handleTabChange: (event: any) => void,\n  handleTabSequence: (event: any) => void,\n  activeIndex: number,\n  children: React.ReactNode\n};\n\nexport default class SortMethod extends React.PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.onSortEnd = this.onSortEnd.bind(this);\n  }\n\n  onSortEnd({oldIndex, newIndex}: {oldIndex: number, newIndex: number}) {\n    const {activeIndex, handleTabChange, handleTabSequence} = this.props;\n    if (oldIndex === newIndex) {\n      if (activeIndex !== oldIndex) {\n        handleTabChange(oldIndex);\n      }\n    } else {\n      handleTabSequence({oldIndex, newIndex});\n    }\n  }\n}","import * as React from \"react\"\n// @ts-expect-error\nimport Poppop from \"react-poppop\"\nimport { SortableContainer } from \"react-sortable-hoc\"\nimport SortMethod from \"./SortMethod\"\n\ntype Props = {\n  closeModal: (event: any) => void\n  handleTabSequence: (event: any) => void\n  handleTabChange: (event: any) => void\n  activeIndex: number\n  children: React.ReactNode\n}\n\nconst DragTabContainer = SortableContainer(\n  ({ children }: { children: React.ReactNode }) => {\n    return <div style={{ marginTop: \"50px\" }}>{children}</div>\n  }\n)\n\nclass ModalTabListWrapper extends SortMethod {\n  render() {\n    return (\n      <DragTabContainer\n        onSortEnd={this.onSortEnd}\n        axis=\"y\"\n        lockAxis=\"y\"\n        // if no pressDelay, close button cannot be triggered,\n        // because it would always treat click as dnd action\n        pressDelay={100}\n      >\n        {this.props.children}\n      </DragTabContainer>\n    )\n  }\n}\n\nexport default class TabModal extends React.Component<Props> {\n  render() {\n    return (\n      <Poppop\n        open={true}\n        onClose={this.props.closeModal}\n        closeOnEsc={true}\n        closeBtn={true}\n      >\n        <ModalTabListWrapper\n          handleTabSequence={this.props.handleTabSequence}\n          handleTabChange={this.props.handleTabChange}\n          activeIndex={this.props.activeIndex}\n        >\n          {this.props.children}\n        </ModalTabListWrapper>\n      </Poppop>\n    )\n  }\n}\n","// @ts-nocheck\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport invariant from 'invariant';\nimport { LeftIcon, RightIcon, BulletIcon } from './IconSvg';\nimport { isNumber } from './utils/isType';\nimport TabModal from './TabModal';\n\nconst buttonWidth = 35;\nconst getPadding = ({ showModalButton, showArrowButton }) => {\n    let paddingLeft = 0;\n    let paddingRight = 0;\n    if (showModalButton) {\n        paddingLeft += buttonWidth;\n    }\n    if (showArrowButton) {\n        paddingLeft += buttonWidth;\n        paddingRight += buttonWidth;\n        if (showModalButton) {\n            paddingLeft += 2;\n        }\n    }\n    if (paddingLeft > 0) {\n        paddingLeft += 3;\n    }\n    if (paddingRight > 0) {\n        paddingRight += 3;\n    }\n    return `0 ${paddingRight}px 0 ${paddingLeft}px`;\n};\n\nconst TabListStyle = styled.div`\n    background-color: white;\n    text-align: left;\n    position: relative;\n    white-space: nowrap;\n    overflow: hidden;\n    width: auto;\n    padding: ${props => getPadding(props)};\n`;\n\nconst ListInner = styled.div`\n    overflow: hidden;\n`;\n\nconst ListScroll = styled.ul`\n    padding-left: 0;\n    position: relative;\n    margin: 0;\n    list-style: none;\n    display: inline-block;\n    transition: transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);\n`;\n\nconst ActionButtonStyle = styled.div`\n    height: 100%;\n    width: ${buttonWidth}px;\n    text-align: center;\n    border: 1px solid #d9d9d9;\n    border-bottom: 0;\n    border-radius: 4px 4px 0 0;\n    background: #f9f9f9;\n    > svg {\n        padding-top: 11px;\n    }\n`;\n\nconst makeScrollButton = ActionButton => styled(ActionButton)`\n    display: inline-block;\n    filter: none;\n    position: absolute;\n    ${props => (props.left ? (props.showModalButton ? `left: ${buttonWidth + 2}px` : `left: 0`) : 'right: 0')};\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst makeFoldButton = ActionButton => styled(ActionButton)`\n    display: inline-block;\n    filter: none;\n    position: absolute;\n    left: 0;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\ntype Props = {\n    customStyle: {\n        TabList: React.FC<Partial<Props>>;\n        Tab: JSX.Element;\n        ActionButton: JSX.Element;\n    };\n    activeIndex: number;\n    showArrowButton: 'auto' | boolean;\n    showModalButton: number | boolean;\n    handleTabChange: (event: any) => void;\n    handleTabSequence: (event: any) => void;\n    handleEdit: (event: any) => void;\n    ExtraButton: React.ReactElement<any>;\n    children: React.ReactNode[];\n    hasExtraButton?: boolean;\n};\n\ntype State = {\n    modalIsOpen: boolean;\n    showArrowButton: boolean;\n    showModalButton: boolean | number;\n};\n\nexport default class TabListComponent extends React.Component<Props, State> {\n    listContainer: React.ElementRef<'div'>;\n    rightArrowNode: React.ElementRef<'div'>;\n    leftArrowNode: React.ElementRef<'div'>;\n    listScroll: React.ElementRef<'ul'>;\n    foldNode: React.ElementRef<'div'>;\n    tabRefs: React.ElementRef<'div'>[];\n    scrollPosition: number;\n\n    constructor(props: Props) {\n        super(props);\n        this.handleScroll = this.handleScroll.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.renderTabs = this.renderTabs.bind(this);\n        this.renderArrowButton = this.renderArrowButton.bind(this);\n        this.isShowModalButton = this.isShowModalButton.bind(this);\n        this.isShowArrowButton = this.isShowArrowButton.bind(this);\n        this.scrollPosition = 0;\n        this.tabRefs = [];\n        this.state = {\n            modalIsOpen: false,\n            showArrowButton: false,\n            showModalButton: false\n        };\n    }\n\n    componentDidMount() {\n        this.isShowArrowButton();\n        this.isShowModalButton();\n        if (this.props.activeIndex > 0) this.scrollToIndex(this.props.activeIndex, 'left');\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        if (prevProps.children.length !== this.props.children.length) {\n            this.isShowArrowButton();\n            this.isShowModalButton();\n        }\n\n        if (prevProps.activeIndex !== this.props.activeIndex) {\n            //if we scroll to the last tab, alignment is set to the right side of the tab\n            const rectSide = this.props.activeIndex === this.props.children.length - 1 ? 'right' : 'left';\n            this.scrollToIndex(this.props.activeIndex, rectSide);\n        }\n        // if prev state show arrow button, and current state doesn't show\n        // need to reset the scroll position, or some tabs will be hided by container.\n        if (prevState.showArrowButton && !this.state.showArrowButton) {\n            this.scrollToZero();\n        }\n\n        if (prevProps.showModalButton !== this.props.showModalButton) {\n            this.isShowModalButton();\n        }\n\n        if (prevProps.showArrowButton !== this.props.showArrowButton) {\n            this.isShowArrowButton();\n        }\n    }\n\n    getTabNode(tab: any): React.ElementRef<any> {\n        if (tab.__INTERNAL_NODE) {\n            // normal tab\n            return tab.__INTERNAL_NODE;\n        } else if (tab.__DRAG_TAB_INTERNAL_NODE) {\n            // drag tab\n            return tab.__DRAG_TAB_INTERNAL_NODE.node;\n        }\n    }\n\n    unifyScrollMax(width: number) {\n        return (width / 3) * 2;\n    }\n\n    handleScroll(direction: 'right' | 'left') {\n        let leftMove = 0;\n        const containerOffset = this.listContainer.getBoundingClientRect();\n        const containerWidth = this.listContainer.offsetWidth;\n        const tabFirstOffset = this.getTabNode(this.tabRefs[0]).getBoundingClientRect();\n        const tabLastOffset = this.getTabNode(this.tabRefs[this.tabRefs.length - 1]).getBoundingClientRect();\n\n        if (direction === 'right') {\n            leftMove = tabLastOffset.right - containerOffset.right;\n            if (leftMove > containerWidth) {\n                leftMove = this.unifyScrollMax(containerWidth);\n            }\n        } else if (direction === 'left') {\n            leftMove = tabFirstOffset.left - containerOffset.left;\n            if (-leftMove > containerWidth) {\n                leftMove = -this.unifyScrollMax(containerWidth);\n            }\n        }\n        this.scrollPosition += leftMove;\n        if (this.scrollPosition < 0) {\n            this.scrollPosition = 0;\n        }\n\n        this.listScroll.style.transform = `translate3d(-${this.scrollPosition}px, 0, 0)`;\n    }\n\n    // $FlowFixMe\n    scrollToIndex(index: number, rectSide: 'left' | 'right') {\n        const tabOffset = this.getTabNode(this.tabRefs[index]).getBoundingClientRect();\n        const containerOffset = this.listContainer.getBoundingClientRect();\n        // Cancel scrolling if the tab is visible\n        if (tabOffset.right < containerOffset.right && tabOffset.left > containerOffset.left) return;\n        const leftMove = tabOffset[rectSide] - containerOffset[rectSide];\n        this.scrollPosition += leftMove;\n        if (this.scrollPosition < 0) {\n            this.scrollPosition = 0;\n        }\n        this.listScroll.style.transform = `translate3d(-${this.scrollPosition}px, 0, 0)`;\n    }\n\n    scrollToZero() {\n        this.listScroll.style.transform = `translate3d(0, 0, 0)`;\n    }\n\n    toggleModal(open: boolean) {\n        this.setState({ modalIsOpen: open }, () => {\n            if (!open) {\n                // $FlowFixMe\n                this.scrollToIndex(this.props.activeIndex, 'right');\n            }\n        });\n    }\n\n    isShowModalButton() {\n        let { showModalButton } = this.props;\n        if (isNumber(showModalButton)) {\n            // $FlowFixMe, weired. currently set showModalButton as number | bool, but don't know why flow only can recognize it as bool\n            showModalButton = this.props.children.length >= showModalButton;\n        }\n        this.setState({ showModalButton });\n    }\n\n    isShowArrowButton() {\n        let { showArrowButton } = this.props;\n        if (showArrowButton === 'auto') {\n            let tabWidth = 0;\n            const containerWidth = this.listContainer.offsetWidth;\n            showArrowButton = false;\n            for (let index = 0; index < this.tabRefs.length; index++) {\n                const tab = this.getTabNode(this.tabRefs[index]);\n                tabWidth += tab.offsetWidth;\n                if (tabWidth >= containerWidth) {\n                    showArrowButton = true;\n                    break;\n                }\n            }\n        }\n        // $FlowFixMe: flow will show 'auto' is not bool, but with this logic, showArrowButton will never be 'auto'\n        this.setState({ showArrowButton });\n    }\n\n    renderTabs(options: any = {}, isModal?: boolean) {\n        const { children, activeIndex, handleTabChange, handleEdit, customStyle } = this.props;\n        const props = {\n            handleTabChange,\n            handleEdit,\n            //$FlowFixMe\n            CustomTabStyle: customStyle.Tab\n        };\n        if (!isModal) {\n            this.tabRefs = [];\n        }\n        return React.Children.map(children, (child, index) =>\n            React.cloneElement(child, {\n                key: index,\n                active: index === activeIndex,\n                index,\n                tabIndex: index,\n                ref: node => {\n                    if (!isModal && node) {\n                        this.tabRefs.push(node);\n                    }\n                },\n                ...props,\n                ...options\n            })\n        );\n    }\n\n    renderArrowButton(ScrollButton: React.ComponentType<any>) {\n        const { showArrowButton } = this.state;\n        if (showArrowButton) {\n            return (\n                <div>\n                    <ScrollButton\n                        left\n                        onClick={() => {\n                            this.handleScroll('left');\n                        }}\n                        ref={node => (this.leftArrowNode = node)}\n                        showModalButton={this.state.showModalButton}\n                    >\n                        <LeftIcon />\n                    </ScrollButton>\n                    <ScrollButton\n                        onClick={() => {\n                            this.handleScroll('right');\n                        }}\n                        ref={node => (this.rightArrowNode = node)}\n                    >\n                        <RightIcon />\n                    </ScrollButton>\n                </div>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        const { customStyle, activeIndex, handleTabChange, handleTabSequence, ExtraButton } = this.props;\n        const { modalIsOpen } = this.state;\n        const TabList = customStyle.TabList || TabListStyle;\n        const ActionButton = customStyle.ActionButton || ActionButtonStyle;\n        const ScrollButton = makeScrollButton(ActionButton);\n        const FoldButton = makeFoldButton(ActionButton);\n        invariant(this.props.children, 'React-tabtab Error: You MUST pass at least one tab');\n        return (\n            <div>\n                {ExtraButton ? ExtraButton : null}\n                <TabList\n                    hasExtraButton={!!ExtraButton}\n                    showModalButton={this.state.showModalButton}\n                    showArrowButton={this.state.showArrowButton}\n                >\n                    {this.state.showModalButton ? (\n                        <FoldButton\n                            ref={node => (this.foldNode = node)}\n                            onClick={this.toggleModal.bind(this, true)}\n                            showArrowButton={this.state.showArrowButton}\n                        >\n                            <BulletIcon />\n                        </FoldButton>\n                    ) : null}\n                    {this.renderArrowButton(ScrollButton)}\n                    <ListInner ref={node => (this.listContainer = node)}>\n                        <ListScroll ref={node => (this.listScroll = node)} role=\"tablist\">\n                            {this.renderTabs()}\n                        </ListScroll>\n                    </ListInner>\n                </TabList>\n                {modalIsOpen ? (\n                    <TabModal\n                        closeModal={this.toggleModal.bind(this, false)}\n                        handleTabSequence={handleTabSequence}\n                        handleTabChange={handleTabChange}\n                        activeIndex={activeIndex}\n                    >\n                        {this.renderTabs({ vertical: true }, true)}\n                    </TabModal>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport { TabListStyle, ActionButtonStyle };\n","// @flow\nexport function isTabList(element: any) {\n  return element.type && \n         (element.type.displayName === 'TabList' || element.type.displayName === 'DragTabList');  \n}\n\nexport function isTab(element: any) {\n  return element.type && \n         (element.type.displayName === 'Tab' || element.type.displayName === 'DragTab');\n}\n\nexport function isNumber(number: any) {\n  return !isNaN(parseInt(number, 10));\n}","// @flow\nimport * as React from \"react\"\nimport { CloseIcon } from \"./IconSvg\"\nimport styled from \"styled-components\"\n\nconst CloseWrapper = styled.button`\n  display: inline-block;\n  color: #777;\n  margin-left: 5px;\n  padding: 0;\n  vertical-align: middle;\n  border: 0;\n  padding: 2px;\n  outline: 0;\n  &:hover {\n    color: black;\n    background-color: #eee;\n    cursor: pointer;\n    border-radius: 50%;\n  }\n  > svg {\n    vertical-align: middle;\n  }\n`\n\ntype Props = {\n  handleDelete: (event: any) => void\n}\n\nexport default class CloseButton extends React.PureComponent<Props> {\n  render() {\n    return (\n      <CloseWrapper onClick={this.props.handleDelete}>\n        <CloseIcon />\n      </CloseWrapper>\n    )\n  }\n}\n","// @flow\nimport * as React from \"react\"\nimport styled from \"styled-components\"\nimport CloseButton from \"./CloseButton\"\n\n// const TabLi: React.FC<React.LiHTMLAttributes<HTMLLIElement> & TabProps> = (props: React.LiHTMLAttributes<HTMLLIElement>) => {\n//   return <li {...props}></li>\n// }\n\nconst TabLi = React.forwardRef<\n  HTMLLIElement,\n  React.LiHTMLAttributes<HTMLLIElement> & Partial<TabProps>\n>((props: React.LiHTMLAttributes<HTMLLIElement> & Partial<TabProps>, ref) => {\n  return (\n    <li ref={ref} {...props}>\n      {props.children}\n    </li>\n  )\n})\n\nconst TabStyle = styled(TabLi)`\n  display: ${(props) => (props.vertical ? \"block\" : \"inline-block\")};\n  ${(props) =>\n    props.vertical\n      ? `\n      background-color: white;\n      color: black;\n      padding: 10px 10px;\n      z-index: 100000;\n    `\n      : (props) =>\n          props.closable\n            ? \"padding: 10px 10px 10px 15px;\"\n            : \"padding: 10px 15px;\"}\n\n  user-select: none;\n  &:hover {\n    cursor: pointer;\n    color: black;\n  }\n`\n\nconst TabText = styled.span`\n  vertical-align: middle;\n`\n\nexport type TabProps = {\n  CustomTabStyle: React.FC<Partial<TabProps>>\n  handleTabChange: (event: any) => void\n  handleEdit: (event: any) => void\n  index: number\n  active: boolean\n  closable: boolean\n  vertical: boolean\n  children: React.ReactNode\n}\n\nexport default class Tab extends React.PureComponent<TabProps> {\n  __INTERNAL_NODE: React.ElementRef<any>\n\n  constructor(props: TabProps) {\n    super(props)\n    this.clickTab = this.clickTab.bind(this)\n    this.clickDelete = this.clickDelete.bind(this)\n  }\n\n  clickTab() {\n    const { handleTabChange, index } = this.props\n    handleTabChange(index)\n  }\n\n  clickDelete(event: React.SyntheticEvent<HTMLButtonElement>) {\n    event.stopPropagation() // prevent trigger clickTab event.\n    const { handleEdit, index } = this.props\n    handleEdit({ type: \"delete\", index })\n  }\n\n  render() {\n    const { CustomTabStyle, active, closable, vertical, index } = this.props\n    const TabComponent = CustomTabStyle || TabStyle\n    return (\n      <TabComponent\n        ref={(node) => (this.__INTERNAL_NODE = node)}\n        onClick={this.clickTab}\n        //  active={active}\n        vertical={vertical}\n        closable={closable}\n        role=\"tab\"\n        id={`react-tabtab-tab-${index}`}\n        aria-controls={`react-tabtab-panel-${index}`}\n        aria-selected={active}\n      >\n        <TabText>{this.props.children}</TabText>\n        {closable ? <CloseButton handleDelete={this.clickDelete} /> : null}\n      </TabComponent>\n    )\n  }\n}\n\nexport { TabStyle }\n","// @ts-nocheck\nimport React from \"react\"\nimport SortMethod from \"./SortMethod\"\nimport { SortableContainer } from \"react-sortable-hoc\"\nimport TabList from \"./TabList\"\n\nconst DragTabContainer = SortableContainer(({ children, ...props }) => {\n  return <TabList {...props}>{children}</TabList>\n})\n\nexport default class DragTabList extends SortMethod {\n  render() {\n    const { children, ...props } = this.props\n    return (\n      <DragTabContainer\n        onSortEnd={this.onSortEnd}\n        axis=\"x\"\n        lockAxis=\"x\"\n        // if no pressDelay, close button cannot be triggered,\n        // because it would always treat click as dnd action\n        pressDelay={100}\n        {...props}\n      >\n        {children}\n      </DragTabContainer>\n    )\n  }\n}\n\nDragTabList.displayName = \"DragTabList\"\n","// @flow\nimport * as React from \"react\"\nimport { SortableElement } from \"react-sortable-hoc\"\nimport Tab, { TabProps } from \"./Tab\"\n\nconst DragTabElement = SortableElement(\n  ({ children, ...props }: Partial<TabProps>) => {\n    return (\n      // @ts-ignore\n      <Tab {...props} index={props.tabIndex}>\n        {children}\n      </Tab>\n    )\n  }\n)\n\nclass DragTab extends React.PureComponent {\n  __DRAG_TAB_INTERNAL_NODE: React.ElementRef<any>\n\n  render() {\n    const { children, ...props } = this.props\n    return (\n      <DragTabElement\n        index={0}\n        ref={(node) => (this.__DRAG_TAB_INTERNAL_NODE = node)}\n        {...props}\n      >\n        {children}\n      </DragTabElement>\n    )\n  }\n}\n\nexport default DragTab\n","// @flow\nimport * as React from \"react\"\nimport { ReactElement } from \"react\"\n\ntype Props = {\n  children: Array<any>\n  activeIndex: number\n  customStyle: {\n    Panel: () => void\n  }\n}\n\nexport default class PanelList extends React.PureComponent<Props> {\n  render() {\n    const { children, activeIndex, customStyle } = this.props\n    if (!children || activeIndex === undefined) {\n      return null\n    }\n\n    let props = {}\n    if (customStyle && customStyle.Panel) {\n      props = { ...props, CustomPanelStyle: customStyle.Panel }\n    }\n\n    // to prevent the type of one children is object type\n    const result = React.Children.toArray(children).map((child, index) =>\n      React.cloneElement(child as ReactElement, {\n        key: index,\n        active: index === activeIndex,\n        index,\n        ...props\n      })\n    )\n    return <div>{result}</div>\n  }\n}\n","// @flow\nimport * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst PanelStyle = styled.div<{ active: boolean }>`\n  background-color: white;\n  text-align: left;\n  padding: 20px 15px;\n  ${(props) => (!props.active ? `display: none;` : null)}\n`\n\nexport type PanelProps = {\n  children: React.ReactNode\n  CustomPanelStyle: React.FC<Partial<PanelProps>>\n  active: boolean\n  index: number\n}\n\nexport default class PanelComponent extends React.PureComponent<PanelProps> {\n  render() {\n    const { active, index } = this.props\n    const Panel = this.props.CustomPanelStyle || PanelStyle\n    return (\n      <Panel\n        role=\"tabpanel\"\n        id={`react-tabtab-panel-${index}`}\n        aria-labelledby={`react-tabtab-${index}`}\n        aria-hidden={false}\n        active={active}\n      >\n        {active ? this.props.children : null}\n      </Panel>\n    )\n  }\n}\n\nexport { PanelStyle }\n","import * as React from 'react';\nimport Panel, { PanelProps } from './Panel';\n\ntype Props = {\n    loadContent: (cb: (err: any, data?: any) => void) => any;\n    render: (data: any) => React.ReactNode;\n    renderLoading: () => React.ReactNode;\n    CustomPanelStyle: React.FC<Partial<PanelProps>>;\n    active: boolean;\n    index: number;\n    cache: boolean;\n};\n\ntype State = {\n    isLoading: boolean;\n    data: any;\n};\n\nexport default class AsyncPanelComponent extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        cache: true\n    };\n\n    cacheData: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.loadPanel = this.loadPanel.bind(this);\n        this.cacheData = undefined;\n        this.state = {\n            isLoading: false,\n            data: undefined\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.active) this.loadPanel();\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n        if (nextProps.active) this.loadPanel();\n    }\n\n    loadPanel() {\n        const { loadContent, cache } = this.props;\n        if (cache && this.cacheData) {\n            this.setState({\n                isLoading: false,\n                data: this.cacheData\n            });\n            return;\n        }\n        const callback = (err: any, data?: any) => {\n            if (err) {\n                console.log('React-Tabtab async panel error:', err);\n            }\n            if (cache) {\n                this.cacheData = data;\n            }\n            this.setState({\n                isLoading: false,\n                data\n            });\n        };\n        const promise = loadContent(callback);\n        if (promise) {\n            promise.then(\n                (data: any) => callback(null, data),\n                (err: any) => callback(err)\n            );\n        }\n        if (!this.state.isLoading) {\n            this.setState({ isLoading: true });\n        }\n    }\n\n    render() {\n        const { render, renderLoading, CustomPanelStyle, active, index } = this.props;\n        const { isLoading, data } = this.state;\n        let content;\n        if (isLoading) {\n            content = renderLoading();\n        } else {\n            content = render(data);\n        }\n        return <Panel {...{ CustomPanelStyle, active, index }}>{content}</Panel>;\n    }\n}\n","// @flow\nimport * as React from \"react\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.button`\n  float: right;\n  border: 1px solid #eee;\n  border-radius: 2px;\n  padding: 3px;\n  margin-top: 10px;\n  margin-left: 2px;\n  display: inline-block;\n  color: #777;\n  vertical-align: middle;\n  /* ${(props) =>\n    props.disabled\n      ? `\n    pointer-events: none;\n    color: #AAA;\n    background: #F5F5F5;\n  `\n      : null} */\n  &:hover {\n    color: black;\n    cursor: pointer;\n  }\n  &:disabled,\n  &[disabled] {\n    border: 1px solid grey;\n    background-color: #e7e7e7;\n    cursor: not-allowed;\n  }\n`\n\ntype Props = {\n  onClick: (event: any) => void\n  disabled: boolean\n  children: React.ReactNode\n}\n\nexport default class ExtraButton extends React.PureComponent<Props> {\n  static defaultProps = {\n    disabled: false\n  }\n\n  render() {\n    const { disabled, onClick } = this.props\n    return (\n      <Wrapper onClick={onClick} disabled={disabled}>\n        {this.props.children}\n      </Wrapper>\n    )\n  }\n}\n","// @flow\nimport Tabs from \"./Tabs\"\nimport TabList, { TabListStyle, ActionButtonStyle } from \"./TabList\"\nimport Tab, { TabStyle } from \"./Tab\"\nimport DragTabList from \"./DragTabList\"\nimport DragTab from \"./DragTab\"\nimport PanelList from \"./PanelList\"\nimport Panel, { PanelStyle } from \"./Panel\"\nimport AsyncPanel from \"./AsyncPanel\"\nimport ExtraButton from \"./ExtraButton\"\n\nexport {\n  Tabs,\n  TabList,\n  Tab,\n  DragTabList,\n  DragTab,\n  PanelList,\n  Panel,\n  AsyncPanel,\n  ExtraButton\n}\n\nexport const styled = { TabListStyle, ActionButtonStyle, TabStyle, PanelStyle }\n"],"names":["Tabs","_super","props","_this","call","this","handleTabChange","bind","handleTabSequence","handleEdit","state","activeIndex","getActiveIndex","__extends","prototype","defaultIndex","componentWillReceiveProps","nextProps","setState","index","_a","onTabChange","oldIndex","newIndex","onTabSequenceChange","type","onTabEdit","render","children","extraProps","__rest","__assign","React","createElement","Children","map","child","cloneElement","defaultProps","showModalButton","showArrowButton","customStyle","TabList","Tab","Panel","ActionButton","Component","Svg","d","viewBox","fill","height","width","style","verticalAlign","CloseIcon","LeftIcon","RightIcon","BulletIcon","SortMethod","onSortEnd","_b","PureComponent","DragTabContainer","SortableContainer","marginTop","ModalTabListWrapper","axis","lockAxis","pressDelay","TabModal","Poppop","open","onClose","closeModal","closeOnEsc","closeBtn","TabListStyle","styled","div","templateObject_1","__makeTemplateObject","paddingLeft","paddingRight","concat","ListInner","templateObject_2","ListScroll","ul","templateObject_3","ActionButtonStyle","templateObject_4","TabListComponent","handleScroll","toggleModal","renderTabs","renderArrowButton","isShowModalButton","isShowArrowButton","scrollPosition","tabRefs","modalIsOpen","componentDidMount","scrollToIndex","componentDidUpdate","prevProps","prevState","length","rectSide","scrollToZero","getTabNode","tab","__INTERNAL_NODE","__DRAG_TAB_INTERNAL_NODE","node","unifyScrollMax","direction","leftMove","containerOffset","listContainer","getBoundingClientRect","containerWidth","offsetWidth","tabFirstOffset","tabLastOffset","right","left","listScroll","transform","tabOffset","isNaN","parseInt","tabWidth","options","isModal","CustomTabStyle","key","active","tabIndex","ref","push","ScrollButton","onClick","leftArrowNode","rightArrowNode","ExtraButton","templateObject_5","buttonWidth","makeScrollButton","FoldButton","templateObject_6","makeFoldButton","invariant","hasExtraButton","foldNode","role","vertical","CloseWrapper","button","CloseButton","handleDelete","TabLi","forwardRef","TabStyle","closable","TabText","span","clickTab","clickDelete","event","stopPropagation","TabComponent","id","DragTabList","displayName","DragTabElement","SortableElement","DragTab","PanelList","undefined","CustomPanelStyle","result","toArray","PanelStyle","PanelComponent","AsyncPanelComponent","loadPanel","cacheData","isLoading","data","loadContent","cache","callback","err","console","log","promise","then","content","renderLoading","Wrapper","disabled"],"mappings":"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"}